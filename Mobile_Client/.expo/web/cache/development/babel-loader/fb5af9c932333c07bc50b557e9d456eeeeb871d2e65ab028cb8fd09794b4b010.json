{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/classPrivateFieldLooseKey\";\nvar api = 'http://10.50.6.210:8080';\nvar _accesToken = _classPrivateFieldLooseKey(\"accesToken\");\nvar _personal = _classPrivateFieldLooseKey(\"personal\");\nvar Client = function () {\n  function Client() {\n    _classCallCheck(this, Client);\n    Object.defineProperty(this, _accesToken, {\n      writable: true,\n      value: undefined\n    });\n    Object.defineProperty(this, _personal, {\n      writable: true,\n      value: null\n    });\n    this.isLoggedIn = false;\n  }\n  _createClass(Client, [{\n    key: \"fillRequestHeaders\",\n    value: function fillRequestHeaders() {\n      return {\n        'Content-Type': 'application/json'\n      };\n    }\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator(function* (endpoint) {\n        var response = yield fetch(endpoint, {\n          headers: this.fillRequestHeaders()\n        });\n        return yield response.json();\n      });\n      function getData(_x) {\n        return _getData.apply(this, arguments);\n      }\n      return getData;\n    }()\n  }, {\n    key: \"fetchPersonalData\",\n    value: function () {\n      var _fetchPersonalData = _asyncToGenerator(function* () {\n        try {\n          _classPrivateFieldLooseBase(this, _personal)[_personal] = yield this.getData(api + '/me');\n        } catch (error) {}\n      });\n      function fetchPersonalData() {\n        return _fetchPersonalData.apply(this, arguments);\n      }\n      return fetchPersonalData;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(function* (mail, password) {\n        try {\n          var response = yield fetch(api + \"/auth/login\", {\n            method: \"POST\",\n            headers: this.fillRequestHeaders(),\n            body: JSON.stringify({\n              email: mail,\n              password: password\n            })\n          });\n          var statusCode = response.status;\n          var data = yield response.json();\n          if (statusCode === 200) {\n            this.isLoggedIn = true;\n            _classPrivateFieldLooseBase(this, _accesToken)[_accesToken] = data.access_token;\n            yield this.fetchPersonalData();\n            return 200;\n          } else if (statusCode === 400) {\n            return 400;\n          }\n        } catch (error) {\n          console.error('Erreur de connexion :', error);\n          return 500;\n        }\n      });\n      function login(_x2, _x3) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n  }, {\n    key: \"checkMail\",\n    value: function () {\n      var _checkMail = _asyncToGenerator(function* (mail) {\n        try {\n          var response = yield fetch(api + \"/auth/check_mail\", {\n            method: \"POST\",\n            headers: this.fillRequestHeaders(),\n            body: JSON.stringify({\n              email: mail\n            })\n          });\n          var statusCode = response.status;\n          var data = yield response.json();\n          if (statusCode === 200) {\n            return 200;\n          } else if (statusCode === 201) {\n            return 201;\n          }\n        } catch (error) {\n          console.error('Erreur de connexion ghjj:', error);\n          return 500;\n        }\n      });\n      function checkMail(_x4) {\n        return _checkMail.apply(this, arguments);\n      }\n      return checkMail;\n    }()\n  }]);\n  return Client;\n}();\nvar User = new Client();\nexport default User;","map":{"version":3,"names":["api","_accesToken","_classPrivateFieldLooseKey","_personal","Client","_classCallCheck","Object","defineProperty","writable","value","undefined","isLoggedIn","_createClass","key","fillRequestHeaders","_getData","_asyncToGenerator","endpoint","response","fetch","headers","json","getData","_x","apply","arguments","_fetchPersonalData","_classPrivateFieldLooseBase","error","fetchPersonalData","_login","mail","password","method","body","JSON","stringify","email","statusCode","status","data","access_token","console","login","_x2","_x3","_checkMail","checkMail","_x4","User"],"sources":["/home/Rawowoo/Tek3/DEV/B-DEV-500-COT-5-2-area-bridge.atindokpo/Mobile_Client/User.js"],"sourcesContent":["const api = 'http://10.50.6.210:8080';\n\nclass Client {\n    #accesToken = undefined;\n    #personal = null;\n    constructor() {\n        this.isLoggedIn = false;\n    }\n    fillRequestHeaders() {\n        return {\n            'Content-Type': 'application/json',\n        };\n    }\n\n    async getData(endpoint) {\n        const response = await fetch(endpoint,\n            {\n                headers: this.fillRequestHeaders()\n            });\n        return await response.json();\n    }\n\n    async fetchPersonalData() {\n        try {\n            this.#personal = await this.getData(api + '/me');\n        } catch (error) {\n            // console.log(error);\n        }\n    }\n\n    async login(mail, password) {\n        try {\n            const response = await fetch(api + \"/auth/login\", {\n                method: \"POST\",\n                headers: this.fillRequestHeaders(),\n                body: JSON.stringify({ email: mail, password: password }),\n            });\n            const statusCode = response.status;\n            const data = await response.json();\n            if (statusCode === 200) {\n                // console.log(\"Is goodlogin\");\n                this.isLoggedIn = true;\n                this.#accesToken = data.access_token;\n                await this.fetchPersonalData();\n                return 200;\n            } else if (statusCode === 400) {\n                // console.log(\"Is badlogin\");\n                return 400;\n            }\n        } catch (error) {\n            console.error('Erreur de connexion :', error);\n            return 500;\n        }\n    }\n\n    async checkMail(mail) {\n        try {\n            const response = await fetch(api + \"/auth/check_mail\", {\n                method: \"POST\",\n                headers: this.fillRequestHeaders(),\n                body: JSON.stringify({ email: mail }),\n            });\n            const statusCode = response.status;\n            const data = await response.json();\n            // console.log(statusCode);\n            if (statusCode === 200) {\n                // console.log(\"mail already exist\");\n                return 200;\n            } else if (statusCode === 201) {\n                // console.log(\"you have to register\");\n                return 201;\n            }\n        } catch (error) {\n            console.error('Erreur de connexion ghjj:', error);\n            return 500;\n        }\n    }\n}\n\nconst User = new Client();\nexport default User;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}