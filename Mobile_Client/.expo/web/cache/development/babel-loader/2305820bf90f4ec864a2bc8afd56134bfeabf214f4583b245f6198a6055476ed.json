{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { PaperProvider } from 'react-native-paper';\nimport AppContentScreen from \"./AppContentScreen\";\nimport OnboardingPage from \"./OnboardingPage\";\nimport ConnexionPage from \"./ConnexionPage\";\nimport LoginScreen from \"./LoginScreen\";\nimport RegisterScreen from \"./RegisterScreen\";\nimport Github from \"./Service/Github\";\nimport Spotify from \"./Service/Spotify\";\nimport Discord from \"./Service/Discord\";\nimport Tally from \"./Service/Tally\";\nimport Notion from \"./Service/Notion\";\nimport GoogleService from \"./Service/Google\";\nimport Calendar from \"./Service/Calendar\";\nimport Profil from \"./Profil\";\nimport Edit_profil from \"./Edit_profil\";\nimport TestScreen from \"./TestScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar Stack = createNativeStackNavigator();\nvar App = function App() {\n  return _jsx(PaperProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: \"LoginPage\",\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"OnboardingPage\",\n          component: OnboardingPage\n        }), _jsx(Stack.Group, {\n          screenOptions: {\n            presentation: 'modal'\n          },\n          children: _jsx(Stack.Screen, {\n            name: \"ConnexionPage\",\n            component: ConnexionPage\n          })\n        }), _jsx(Stack.Screen, {\n          name: \"LoginScreen\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"RegisterScreen\",\n          component: RegisterScreen\n        }), _jsx(Stack.Screen, {\n          name: \"AppContentScreen\",\n          component: AppContentScreen\n        }), _jsx(Stack.Screen, {\n          name: \"TestScreen\",\n          component: TestScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Service/Github\",\n          component: Github\n        }), _jsx(Stack.Screen, {\n          name: \"Service/Google\",\n          component: GoogleService\n        }), _jsx(Stack.Screen, {\n          name: \"Service/Calendar\",\n          component: Calendar\n        }), _jsx(Stack.Screen, {\n          name: \"Service/Notion\",\n          component: Notion\n        }), _jsx(Stack.Screen, {\n          name: \"Service/Tally\",\n          component: Tally\n        }), _jsx(Stack.Screen, {\n          name: \"Service/Spotify\",\n          component: Spotify\n        }), _jsx(Stack.Screen, {\n          name: \"Service/Discord\",\n          component: Discord\n        }), _jsx(Stack.Screen, {\n          name: \"Profil\",\n          component: Profil\n        }), _jsx(Stack.Screen, {\n          name: \"Edit_profil\",\n          component: Edit_profil\n        })]\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","PaperProvider","AppContentScreen","OnboardingPage","ConnexionPage","LoginScreen","RegisterScreen","Github","Spotify","Discord","Tally","Notion","GoogleService","Calendar","Profil","Edit_profil","TestScreen","jsx","_jsx","jsxs","_jsxs","WebBrowser","maybeCompleteAuthSession","Stack","App","children","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","component","Group","presentation"],"sources":["/home/Rawowoo/Tek3/DEV/B-DEV-500-COT-5-2-area-bridge.atindokpo/Mobile_Client/App.js"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport {\n  PaperProvider,\n} from 'react-native-paper';\nimport AppContentScreen from './AppContentScreen';\nimport OnboardingPage from './OnboardingPage'\nimport ConnexionPage from './ConnexionPage'\nimport LoginScreen from './LoginScreen'\nimport RegisterScreen from './RegisterScreen'\nimport Github from './Service/Github';\nimport Spotify from './Service/Spotify';\nimport Discord from './Service/Discord';\nimport Tally from './Service/Tally';\nimport Notion from './Service/Notion';\nimport GoogleService from './Service/Google';\nimport Calendar from './Service/Calendar';\nimport Profil from './Profil'\nimport Edit_profil from './Edit_profil'\nimport TestScreen from './TestScreen';\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst Stack = createNativeStackNavigator();\n\nconst App = () => {\n  return (\n    <PaperProvider>\n      <NavigationContainer>\n        <Stack.Navigator initialRouteName=\"LoginPage\" screenOptions={{ headerShown: false }}>\n          <Stack.Screen name=\"OnboardingPage\" component={OnboardingPage} />\n          <Stack.Group screenOptions={{ presentation: 'modal' }}>\n            <Stack.Screen name=\"ConnexionPage\" component={ConnexionPage} />\n          </Stack.Group>\n          <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n          <Stack.Screen name=\"RegisterScreen\" component={RegisterScreen} />\n          <Stack.Screen name=\"AppContentScreen\" component={AppContentScreen} />\n          <Stack.Screen name=\"TestScreen\" component={TestScreen} />\n          <Stack.Screen name=\"Service/Github\" component={Github} />\n          <Stack.Screen name=\"Service/Google\" component={GoogleService} />\n          <Stack.Screen name=\"Service/Calendar\" component={Calendar} />\n          <Stack.Screen name=\"Service/Notion\" component={Notion} />\n          <Stack.Screen name=\"Service/Tally\" component={Tally} />\n          <Stack.Screen name=\"Service/Spotify\" component={Spotify} />\n          <Stack.Screen name=\"Service/Discord\" component={Discord} />\n          <Stack.Screen name=\"Profil\" component={Profil} />\n          <Stack.Screen name=\"Edit_profil\" component={Edit_profil} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </PaperProvider>\n\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}