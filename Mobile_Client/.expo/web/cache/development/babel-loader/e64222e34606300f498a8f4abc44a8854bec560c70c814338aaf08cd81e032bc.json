{"ast":null,"code":"import React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { widthPercentageToDP, heightPercentageToDP, listenOrientationChange, removeOrientationListener } from 'react-native-responsive-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar OnboardingPage = function OnboardingPage(_ref) {\n  var navigation = _ref.navigation;\n  var handlePress = function handlePress() {\n    navigation.navigate('ConnexionPage');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"./Assets/area_logo.jpeg\"),\n      style: styles.image\n    }), _jsx(Text, {\n      style: styles.texts,\n      children: \"The NAS that does it all. Connect, automate, and sync your apps and data with ease.\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handlePress,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Get Started\"\n      })\n    })]\n  });\n};\nvar responsiveWidth = widthPercentageToDP('50%');\nvar responsiveHeight = heightPercentageToDP('30%');\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    marginTop: 50,\n    width: 400,\n    height: 400\n  },\n  texts: {\n    marginTop: -80,\n    fontSize: 15,\n    textAlign: 'center'\n  },\n  button: {\n    marginTop: 40,\n    backgroundColor: 'black',\n    borderRadius: 20,\n    marginLeft: 10,\n    marginRight: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 100\n  },\n  buttonText: {\n    justifyContent: 'center',\n    textAlign: 'center',\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default OnboardingPage;","map":{"version":3,"names":["React","useState","View","Image","StyleSheet","Text","TouchableOpacity","widthPercentageToDP","heightPercentageToDP","listenOrientationChange","removeOrientationListener","jsx","_jsx","jsxs","_jsxs","OnboardingPage","_ref","navigation","handlePress","navigate","style","styles","container","children","source","require","image","texts","button","onPress","buttonText","responsiveWidth","responsiveHeight","create","alignItems","justifyContent","marginTop","width","height","fontSize","textAlign","backgroundColor","borderRadius","marginLeft","marginRight","paddingVertical","paddingHorizontal","color","fontWeight"],"sources":["/home/Rawowoo/Tek3/DEV/B-DEV-500-COT-5-2-area-bridge.atindokpo/Mobile_Client/OnboardingPage.js"],"sourcesContent":["import React, { useState, } from 'react';\nimport { View, Image, StyleSheet, Text, TouchableOpacity } from 'react-native';\nimport { widthPercentageToDP, heightPercentageToDP, listenOrientationChange, removeOrientationListener } from 'react-native-responsive-screen';\n\nconst OnboardingPage = ({ navigation }) => {\n  const handlePress = () => {\n    navigation.navigate('ConnexionPage');\n  };\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require('./Assets/area_logo.jpeg')}\n        style={styles.image}\n      />\n      <Text style={styles.texts}>\n        The NAS that does it all. Connect, automate, and sync your apps and data with ease.\n      </Text>\n      <TouchableOpacity style={styles.button} onPress={handlePress}>\n        <Text style={styles.buttonText}>Get Started</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst responsiveWidth = widthPercentageToDP('50%'); // Get responsive width\nconst responsiveHeight = heightPercentageToDP('30%'); // Get responsive height\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  image: {\n    marginTop: 50,\n    width: 400,\n    height:400,\n  },\n  texts: {\n    marginTop: -80,\n    fontSize: 15,\n    textAlign: 'center',\n  },\n  button: {\n    marginTop: 40,\n    backgroundColor: 'black',\n    borderRadius: 20,\n    marginLeft: 10,\n    marginRight: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 100,\n  },\n  buttonText: {\n    justifyContent: 'center',\n    textAlign: 'center',    \n    color: 'white',\n    fontWeight: 'bold',\n  },\n});\n\nexport default OnboardingPage;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAS,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAEzC,SAASC,mBAAmB,EAAEC,oBAAoB,EAAEC,uBAAuB,EAAEC,yBAAyB,QAAQ,gCAAgC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/I,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAClC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBD,UAAU,CAACE,QAAQ,CAAC,eAAe,CAAC;EACtC,CAAC;EACD,OACEL,KAAA,CAACZ,IAAI;IAACkB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BX,IAAA,CAACT,KAAK;MACJqB,MAAM,EAAEC,OAAO,0BAA0B,CAAE;MAC3CL,KAAK,EAAEC,MAAM,CAACK;IAAM,CACrB,CAAC,EACFd,IAAA,CAACP,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACM,KAAM;MAAAJ,QAAA,EAAC;IAE3B,CAAM,CAAC,EACPX,IAAA,CAACN,gBAAgB;MAACc,KAAK,EAAEC,MAAM,CAACO,MAAO;MAACC,OAAO,EAAEX,WAAY;MAAAK,QAAA,EAC3DX,IAAA,CAACP,IAAI;QAACe,KAAK,EAAEC,MAAM,CAACS,UAAW;QAAAP,QAAA,EAAC;MAAW,CAAM;IAAC,CAClC,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMQ,eAAe,GAAGxB,mBAAmB,CAAC,KAAK,CAAC;AAClD,IAAMyB,gBAAgB,GAAGxB,oBAAoB,CAAC,KAAK,CAAC;AAEpD,IAAMa,MAAM,GAAGjB,UAAU,CAAC6B,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDT,KAAK,EAAE;IACLU,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAC;EACT,CAAC;EACDX,KAAK,EAAE;IACLS,SAAS,EAAE,CAAC,EAAE;IACdG,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC;EACDZ,MAAM,EAAE;IACNQ,SAAS,EAAE,EAAE;IACbK,eAAe,EAAE,OAAO;IACxBC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,EAAE;IACfC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE;EACrB,CAAC;EACDhB,UAAU,EAAE;IACVK,cAAc,EAAE,QAAQ;IACxBK,SAAS,EAAE,QAAQ;IACnBO,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAejC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}